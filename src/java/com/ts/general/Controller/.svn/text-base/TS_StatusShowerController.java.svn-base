package com.ts.general.Controller;

import com.ts.general.Model.Signal;
import com.ts.junction.tableClasses.PlanInfo;
import com.ts.tcpServer.ClientResponder;
import com.ts.webservice.ClientResponderWS;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.util.Date;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.json.JSONObject;

public class TS_StatusShowerController extends HttpServlet {

    private PlanInfo planInfoList;
    private ClientResponder clientResponder;

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            ServletContext ctx = getServletContext();

            String task = request.getParameter("task");
            if (task == null) {
                task = "";
            }
            if (task.equals("jQueryRequest")) {
                response.setContentType("text/html");
                PrintWriter out = response.getWriter();
                String time = null;
                Signal signal = (Signal) ctx.getAttribute("signal");
                if (signal != null) {
                    synchronized (signal) {
                        time = signal.getCurrentTime();
                    }
                } else {
                    System.out.println("signal object was not found");
                }

                out.print(time);
                out.flush();
                return;
            }
            int i = 1;
            if (task.equals("getLatestStatus")) {
                PrintWriter out = response.getWriter();
                JSONObject jsonObj = new JSONObject();
                //ClientResponderWS client = new ClientResponderWS();
//                if(i == 1){
//                    ClientResponderWS.main("abc");
//                    i++;
//                }
                this.planInfoList = ((PlanInfo) ctx.getAttribute("planInfolist"));//ClientResponderWS.getPlanInfoRefreshList();
                if (this.planInfoList != null) {
                    boolean responseFromModemForRefresh = this.planInfoList.isResponseFromModemForRefresh();
                    //boolean responseFromModemForClearnace = this.planInfoList.isResponseFromModemForClearance();

                   // if ((responseFromModemForRefresh == true) || (responseFromModemForClearnace == true)) {
                    if ((responseFromModemForRefresh == true)) {
                        int functionNo = this.planInfoList.getFunction_no();
                        int junction_id = this.planInfoList.getJunction_id();
                        int program_version_no = this.planInfoList.getProgram_version_no();
                        int fileNo = this.planInfoList.getFileNo();
                        int activity = this.planInfoList.getActivity();
                        int side_no = this.planInfoList.getSide_no();
                        int plan_no = this.planInfoList.getPlan_no();
                        String mode = this.planInfoList.getMode();
                        String junctionName = this.planInfoList.getJunction_name();
                        String sideName = this.planInfoList.getSideName();

                        String onTime = this.planInfoList.getOnTime();
                        String offTime = this.planInfoList.getOffTime();

                        String side1Name = this.planInfoList.getSide1Name();
                        String side2Name = this.planInfoList.getSide2Name();
                        String side3Name = this.planInfoList.getSide3Name();
                        String side4Name = this.planInfoList.getSide4Name();
                        String side5Name = this.planInfoList.getSide5Name();

                        int side1Time = this.planInfoList.getSide1_time();
                        int side2Time = this.planInfoList.getSide2_time();
                        int side3Time = this.planInfoList.getSide3_time();
                        int side4Time = this.planInfoList.getSide4_time();
                        int side1LeftStatus = this.planInfoList.getSide1_left_status();
                        int side1RightStatus = this.planInfoList.getSide1_right_status();
                        int side1UpStatus = this.planInfoList.getSide1_up_status();
                        int side1DownStatus = this.planInfoList.getSide1_down_status();
                        int side2LeftStatus = this.planInfoList.getSide2_left_status();
                        int side2RightStatus = this.planInfoList.getSide2_right_status();
                        int side2UpStatus = this.planInfoList.getSide2_up_status();
                        int side2DownStatus = this.planInfoList.getSide2_down_status();
                        int side3LeftStatus = this.planInfoList.getSide3_left_status();
                        int side3RightStatus = this.planInfoList.getSide3_right_status();
                        int side3UpStatus = this.planInfoList.getSide3_up_status();
                        int side3DownStatus = this.planInfoList.getSide3_down_status();
                        int side4LeftStatus = this.planInfoList.getSide4_left_status();
                        int side4RightStatus = this.planInfoList.getSide4_right_status();
                        int side4UpStatus = this.planInfoList.getSide4_up_status();
                        int side4DownStatus = this.planInfoList.getSide4_down_status();

                        int juncHr = this.planInfoList.getJuncHr();
                        int juncMin = this.planInfoList.getJuncMin();
                        int juncDat = this.planInfoList.getJuncDate();
                        int juncMonth = this.planInfoList.getJuncMonth();
                        int juncYear = this.planInfoList.getJuncYear();

                        String response_data = "junction_id=" + junction_id + "#$" + "program_version_no=" + program_version_no + "#$" + "fileNo=" + fileNo
                                + "#$" + "functionNo=" + functionNo + "#$" + "activity=" + activity
                                + "#$" + "side_no=" + side_no + "#$" + "plan_no=" + plan_no
                                + "#$" + "junctionName=" + junctionName + "#$" + "sideName=" + sideName + "#$" + "onTime=" + onTime + "#$" + "offTime=" + offTime
                                + "#$" + "mode=" + mode + "#$" + "side1Name=" + side1Name + "#$" + "side2Name=" + side2Name + "#$" + "side3Name=" + side3Name
                                + "#$" + "side4Name=" + side4Name + "#$" + "side5Name=" + side5Name + "#$" + "side1Time=" + side1Time + "#$" + "side2Time=" + side2Time
                                + "#$" + "side3Time=" + side3Time + "#$" + "side4Time=" + side4Time + "#$" + "side1LeftStatus=" + side1LeftStatus
                                + "#$" + "side1RightStatus=" + side1RightStatus + "#$" + "side1UpStatus=" + side1UpStatus + "#$" + "side1DownStatus=" + side1DownStatus
                                + "#$" + "side2LeftStatus=" + side2LeftStatus + "#$" + "side2RightStatus=" + side2RightStatus + "#$" + "side2UpStatus=" + side2UpStatus
                                + "#$" + "side2DownStatus=" + side2DownStatus + "#$" + "side3LeftStatus=" + side3LeftStatus + "#$" + "side3RightStatus=" + side3RightStatus
                                + "#$" + "side3UpStatus=" + side3UpStatus + "#$" + "side3DownStatus=" + side3DownStatus + "#$" + "side4LeftStatus=" + side4LeftStatus
                                + "#$" + "side4RightStatus=" + side4RightStatus + "#$" + "side4UpStatus=" + side4UpStatus + "#$" + "side4DownStatus=" + side4DownStatus
                                + "#$" + "juncHr=" + juncHr + "#$" + "juncMin=" + juncMin + "#$" + "juncDat=" + juncDat + "#$" + "juncMonth=" + juncMonth
                                + "#$" + "juncYear=" + juncYear;
                        jsonObj.put("junction_id", junction_id + "");
                        jsonObj.put("program_version_no", program_version_no + "");
                        jsonObj.put("fileNo", fileNo + "");
                        jsonObj.put("functionNo", functionNo + "");
                        jsonObj.put("activity", activity + "");
                        jsonObj.put("side_no", side_no + "");
                        jsonObj.put("plan_no", plan_no + "");
                        jsonObj.put("junctionName", junctionName);
                        jsonObj.put("sideName", sideName);
                        jsonObj.put("onTime", onTime);
                        jsonObj.put("offTime", offTime);
                        jsonObj.put("mode", mode);
                        jsonObj.put("side1Name", side1Name);
                        jsonObj.put("side2Name", side2Name);
                        jsonObj.put("side3Name", side3Name);
                        jsonObj.put("side4Name", side4Name);
                        jsonObj.put("side5Name", side5Name);
                        jsonObj.put("side1Time", side1Time + "");
                        jsonObj.put("side2Time", side2Time + "");
                        jsonObj.put("side3Time", side3Time + "");
                        jsonObj.put("side4Time", side4Time + "");
                        jsonObj.put("side1LeftStatus", side1LeftStatus + "");
                        jsonObj.put("side1RightStatus", side1RightStatus + "");
                        jsonObj.put("side1UpStatus", side1UpStatus + "");
                        jsonObj.put("side1DownStatus", side1DownStatus + "");
                        jsonObj.put("side2LeftStatus", side2LeftStatus + "");
                        jsonObj.put("side2RightStatus", side2RightStatus + "");
                        jsonObj.put("side2UpStatus", side2UpStatus + "");
                        jsonObj.put("side2DownStatus", side2DownStatus + "");
                        jsonObj.put("side3LeftStatus", side3LeftStatus + "");
                        jsonObj.put("side3RightStatus", side3RightStatus + "");
                        jsonObj.put("side3UpStatus", side3UpStatus + "");
                        jsonObj.put("side3DownStatus", side3DownStatus + "");
                        jsonObj.put("side4LeftStatus", side4LeftStatus + "");
                        jsonObj.put("side4RightStatus", side4RightStatus + "");
                        jsonObj.put("side4UpStatus", side4UpStatus + "");
                        jsonObj.put("side4DownStatus", side4DownStatus + "");
                        jsonObj.put("juncHr", juncHr + "");
                        jsonObj.put("juncMin", juncMin + "");
                        jsonObj.put("juncDat", juncDat + "");
                        jsonObj.put("juncMonth", juncMonth + "");
                        jsonObj.put("juncYear", juncYear + "");
                        out.println(jsonObj);
                        out.flush();
                    }
                } else {
                    out.println("");
                }

            } else {
                this.planInfoList = ((PlanInfo) ctx.getAttribute("planInfolist"));
                if (this.planInfoList != null) {
                    int functionNo = this.planInfoList.getFunction_no();
                    int junction_id = this.planInfoList.getJunction_id();
                    int program_version_no = this.planInfoList.getProgram_version_no();
                    int fileNo = this.planInfoList.getFileNo();
                    int activity = this.planInfoList.getActivity();
                    int side_no = this.planInfoList.getSide_no();
                    int plan_no = this.planInfoList.getPlan_no();
                    String mode = this.planInfoList.getMode();
                    String junctionName = this.planInfoList.getJunction_name();
                    String sideName = this.planInfoList.getSideName();

                    String onTime = this.planInfoList.getOnTime();
                    String offTime = this.planInfoList.getOffTime();

                    String side1Name = this.planInfoList.getSide1Name();
                    String side2Name = this.planInfoList.getSide2Name();
                    String side3Name = this.planInfoList.getSide3Name();
                    String side4Name = this.planInfoList.getSide4Name();
                    String side5Name = this.planInfoList.getSide5Name();

                    int side1Time = this.planInfoList.getSide1_time();
                    int side2Time = this.planInfoList.getSide2_time();
                    int side3Time = this.planInfoList.getSide3_time();
                    int side4Time = this.planInfoList.getSide4_time();
                    int side1LeftStatus = this.planInfoList.getSide1_left_status();
                    int side1RightStatus = this.planInfoList.getSide1_right_status();
                    int side1UpStatus = this.planInfoList.getSide1_up_status();
                    int side1DownStatus = this.planInfoList.getSide1_down_status();
                    int side2LeftStatus = this.planInfoList.getSide2_left_status();
                    int side2RightStatus = this.planInfoList.getSide2_right_status();
                    int side2UpStatus = this.planInfoList.getSide2_up_status();
                    int side2DownStatus = this.planInfoList.getSide2_down_status();
                    int side3LeftStatus = this.planInfoList.getSide3_left_status();
                    int side3RightStatus = this.planInfoList.getSide3_right_status();
                    int side3UpStatus = this.planInfoList.getSide3_up_status();
                    int side3DownStatus = this.planInfoList.getSide3_down_status();
                    int side4LeftStatus = this.planInfoList.getSide4_left_status();
                    int side4RightStatus = this.planInfoList.getSide4_right_status();
                    int side4UpStatus = this.planInfoList.getSide4_up_status();
                    int side4DownStatus = this.planInfoList.getSide4_down_status();

                    int juncHr = this.planInfoList.getJuncHr();
                    int juncMin = this.planInfoList.getJuncMin();
                    int juncDat = this.planInfoList.getJuncDate();
                    int juncMonth = this.planInfoList.getJuncMonth();
                    int juncYear = this.planInfoList.getJuncYear();

                    request.setAttribute("juncHr", juncHr);
                    request.setAttribute("juncMin", juncMin);
                    request.setAttribute("juncDat", juncDat);
                    request.setAttribute("juncMonth", juncMonth);
                    request.setAttribute("juncYear", juncYear);
                    
                    request.setAttribute("functionNo", Integer.valueOf(functionNo));
                    request.setAttribute("junctionId", Integer.valueOf(junction_id));
                    request.setAttribute("program_version_no", Integer.valueOf(program_version_no));
                    request.setAttribute("fileNo", Integer.valueOf(fileNo));
                    request.setAttribute("junctionName", junctionName);
                    request.setAttribute("activity", activity);
                    request.setAttribute("sideNo", Integer.valueOf(side_no));
                    request.setAttribute("sideName", sideName);
                    request.setAttribute("side1Name", side1Name);
                    request.setAttribute("side2Name", side2Name);
                    request.setAttribute("side3Name", side3Name);
                    request.setAttribute("side4Name", side4Name);
                    request.setAttribute("side5Name", side5Name);

                    request.setAttribute("onTime", onTime);
                    request.setAttribute("offTime", offTime);
                    request.setAttribute("plan_no", plan_no);
                    request.setAttribute("mode", mode);

                    request.setAttribute("side1Time", Integer.valueOf(side1Time));
                    request.setAttribute("side2Time", Integer.valueOf(side2Time));
                    request.setAttribute("side3Time", Integer.valueOf(side3Time));
                    request.setAttribute("side4Time", Integer.valueOf(side4Time));
                    request.setAttribute("side1LeftStatus", Integer.valueOf(side1LeftStatus));
                    request.setAttribute("side1RightStatus", Integer.valueOf(side1RightStatus));
                    request.setAttribute("side1UpStatus", Integer.valueOf(side1UpStatus));
                    request.setAttribute("side1DownStatus", Integer.valueOf(side1DownStatus));
                    request.setAttribute("side2LeftStatus", Integer.valueOf(side2LeftStatus));
                    request.setAttribute("side2RightStatus", Integer.valueOf(side2RightStatus));
                    request.setAttribute("side2UpStatus", Integer.valueOf(side2UpStatus));
                    request.setAttribute("side2DownStatus", Integer.valueOf(side2DownStatus));
                    request.setAttribute("side3LeftStatus", Integer.valueOf(side3LeftStatus));
                    request.setAttribute("side3RightStatus", Integer.valueOf(side3RightStatus));
                    request.setAttribute("side3UpStatus", Integer.valueOf(side3UpStatus));
                    request.setAttribute("side3DownStatus", Integer.valueOf(side3DownStatus));
                    request.setAttribute("side4LeftStatus", Integer.valueOf(side4LeftStatus));
                    request.setAttribute("side4RightStatus", Integer.valueOf(side4RightStatus));
                    request.setAttribute("side4UpStatus", Integer.valueOf(side4UpStatus));
                    request.setAttribute("side4DownStatus", Integer.valueOf(side4DownStatus));
                    request.setAttribute("side4DownStatus", Integer.valueOf(side4DownStatus));
                    
                    request.getRequestDispatcher("ts_statusShower_view").forward(request, response);
                    return;
                } else {
                    String jSON_format = "Oops... No junction is active right now.";

                    request.setAttribute("message", jSON_format);
                    request.getRequestDispatcher("errorView").forward(request, response);
                    return;
                }
            }
        } catch (Exception e) {
            System.out.println("TS_StatusShowerController- doPostError :" + e);
        }
    }

    public void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        doPost(request, response);
    }

    public String getCurrentTime() {
        DateFormat df = DateFormat.getTimeInstance(2);
        return df.format(new Date());
    }

    public ClientResponder getClientResponder() {
        return this.clientResponder;
    }

    public void setClientResponder(ClientResponder clientResponder) {
        this.clientResponder = clientResponder;
    }
}
